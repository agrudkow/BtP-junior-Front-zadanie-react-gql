{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\Artur\\\\Desktop\\\\Projekty\\\\BtP - junior Front - zadanie-react-gql\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Artur\\\\Desktop\\\\Projekty\\\\BtP - junior Front - zadanie-react-gql\\\\src\\\\components\\\\Characters.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query {\\n    allPersons {\\n      id\\n      name\\n      eyeColor\\n      homeworld {\\n        name\\n      }\\n      films {\\n        title\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nconst QUERY = gql(_templateObject());\n\nconst handleClick = id => () => console.log(id);\n\nconst Characters = () => React.createElement(Query, {\n  query: QUERY,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, ({\n  data\n}) => {\n  if (!data || !data.allPersons) return null;\n  const elems = data.allPersons.map(({\n    id,\n    name,\n    eyeColor,\n    homeworld,\n    films\n  }) => React.createElement(\"div\", {\n    className: \"item\",\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Homeworld: \", homeworld && homeworld.name, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), \"Eye color: \", eyeColor, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), films.map(f => React.createElement(\"button\", {\n    key: f.id,\n    onClick: handleClick(f.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, f.title)))));\n  return React.createElement(\"div\", {\n    className: \"items-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, elems);\n});\n\nexport default Characters;","map":{"version":3,"sources":["C:\\Users\\Artur\\Desktop\\Projekty\\BtP - junior Front - zadanie-react-gql\\src\\components\\Characters.js"],"names":["gql","React","Query","QUERY","handleClick","id","console","log","Characters","data","allPersons","elems","map","name","eyeColor","homeworld","films","f","title"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,MAAMC,KAAK,GAAGH,GAAH,mBAAX;;AAiBA,MAAMI,WAAW,GAAIC,EAAD,IAAQ,MAAMC,OAAO,CAACC,GAAR,CAAYF,EAAZ,CAAlC;;AAEA,MAAMG,UAAU,GAAG,MACjB,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAEL,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC;AAAEM,EAAAA;AAAF,CAAD,KAAc;AACb,MAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACC,UAAnB,EAA+B,OAAO,IAAP;AAC/B,QAAMC,KAAK,GAAGF,IAAI,CAACC,UAAL,CAAgBE,GAAhB,CACZ,CAAC;AAAEP,IAAAA,EAAF;AAAMQ,IAAAA,IAAN;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,SAAtB;AAAiCC,IAAAA;AAAjC,GAAD,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,GAAG,EAAEX,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASQ,IAAT,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcE,SAAS,IAAIA,SAAS,CAACF,IADrC,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,iBAGcC,QAHd,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKGE,KAAK,CAACJ,GAAN,CAAWK,CAAD,IACT;AAAQ,IAAA,GAAG,EAAEA,CAAC,CAACZ,EAAf;AAAmB,IAAA,OAAO,EAAED,WAAW,CAACa,CAAC,CAACZ,EAAH,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,CAAC,CAACC,KADL,CADD,CALH,CAFF,CAFU,CAAd;AAkBA,SAAO;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCP,KAAlC,CAAP;AACD,CAtBH,CADF;;AA2BA,eAAeH,UAAf","sourcesContent":["import gql from \"graphql-tag\";\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\n\nconst QUERY = gql`\n  query {\n    allPersons {\n      id\n      name\n      eyeColor\n      homeworld {\n        name\n      }\n      films {\n        title\n        id\n      }\n    }\n  }\n`;\n\nconst handleClick = (id) => () => console.log(id);\n\nconst Characters = () => (\n  <Query query={QUERY}>\n    {({ data }) => {\n      if (!data || !data.allPersons) return null;\n      const elems = data.allPersons.map(\n        ({ id, name, eyeColor, homeworld, films }) => (\n          <div className=\"item\" key={id}>\n            <strong>{name}</strong>\n            <div>\n              Homeworld: {homeworld && homeworld.name}\n              <br />\n              Eye color: {eyeColor}\n              <br />\n              {films.map((f) => (\n                <button key={f.id} onClick={handleClick(f.id)}>\n                  {f.title}\n                </button>\n              ))}\n            </div>\n          </div>\n        )\n      );\n      return <div className=\"items-container\">{elems}</div>;\n    }}\n  </Query>\n);\n\nexport default Characters;\n"]},"metadata":{},"sourceType":"module"}